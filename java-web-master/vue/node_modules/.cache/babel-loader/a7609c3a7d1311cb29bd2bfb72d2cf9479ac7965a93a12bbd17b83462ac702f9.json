{"ast":null,"code":"import request from \"../../utils/request\";\nimport Cookies from \"js-cookie\";\nexport default {\n  name: \"info\",\n  data() {\n    //自定义表单校验\n    const checkPhone = (rule, value, callback) => {\n      if (!/^[1][3,4,5,6,7,8,9][0-9]{9}$/.test(value)) {\n        callback(new Error('请输入合法的手机号'));\n      }\n      callback();\n    };\n    const checkEmail = (rule, value, callback) => {\n      const reg = /^([a-zA-Z0-9]+[-_\\.]?)+@[a-zA-Z0-9]+\\.[a-z]+$/;\n      if (value === '' || value === undefined || value == null) {\n        callback(new Error('请输入邮箱'));\n      } else {\n        if (!reg.test(value)) {\n          callback(new Error('请输入正确的邮箱地址'));\n        } else {\n          callback();\n        }\n      }\n    };\n    const checkID = (rule, value, callback) => {\n      if (!value) {\n        callback(new Error('身份证不能为空'));\n      }\n      if (!/(^\\d{15}$)|(^\\d{18}$)|(^\\d{17}(\\d|X|x)$)/.test(value)) {\n        callback(new Error('请输入正确的二代身份证号码'));\n      } else {\n        callback();\n      }\n    };\n    return {\n      form: {},\n      user: Cookies.get('user') ? JSON.parse(Cookies.get('user')) : {},\n      rules: {\n        name: [{\n          required: true,\n          message: '请输入姓名',\n          trigger: 'blur'\n        }],\n        personNumber: [{\n          validator: checkID,\n          trigger: 'blur'\n        }],\n        phone: [{\n          validator: checkPhone,\n          trigger: 'blur'\n        }],\n        email: [{\n          validator: checkEmail,\n          trigger: 'blur'\n        }],\n        sex: [{\n          required: true,\n          message: '请选择性别',\n          trigger: 'blur'\n        }]\n      }\n    };\n  },\n  created() {\n    const id = this.$route.query.id;\n    this.load(id);\n  },\n  methods: {\n    load(id) {\n      request.get(\"/user/\" + id).then(res => {\n        this.form = res.data;\n      });\n    },\n    save() {\n      this.$refs['ruleForm'].validate(valid => {\n        if (valid) {\n          request.post(\"/user/updateUser\", this.form).then(res => {\n            if (res.code === '200') {\n              this.$notify.success(\"更新成功\");\n              this.load(this.form.id);\n              Cookies.set('user', JSON.stringify(this.form));\n            } else {\n              this.$notify.error(res.msg);\n            }\n          });\n        }\n      });\n    },\n    filesUploadSuccess(res) {\n      this.$nextTick(() => {\n        if (this.$refs['upload']) {\n          this.$refs['upload'].clearFiles(); //清除历史文件列表\n        }\n      });\n\n      this.form.cover = res.data;\n    }\n  }\n};","map":{"version":3,"names":["request","Cookies","name","data","checkPhone","rule","value","callback","test","Error","checkEmail","reg","undefined","checkID","form","user","get","JSON","parse","rules","required","message","trigger","personNumber","validator","phone","email","sex","created","id","$route","query","load","methods","then","res","save","$refs","validate","valid","post","code","$notify","success","set","stringify","error","msg","filesUploadSuccess","$nextTick","clearFiles","cover"],"sources":["src/views/common/info.vue"],"sourcesContent":["<template>\n    <div style=\"width: 60%\">\n        <el-form style=\"margin-left: 5px; margin-top: 10px\" :model=\"form\" label-width=\"100px\" :rules=\"rules\" ref=\"ruleForm\">\n            <el-form-item label=\"用户名:\" prop=\"username\">\n                <el-input v-model=\"form.username\" readonly style=\"width: 20%\"></el-input>\n            </el-form-item>\n            <el-form-item label=\"头像:\">\n                    <el-image\n                        style=\"width: 100px; height: 100px\"\n                        :src=\"this.form.cover\"\n                        :preview-teleported=\"true\">\n                    </el-image>\n                <el-upload ref=\"upload\" :action=\"'http://localhost:9090/files/upload'\" :on-success=\"filesUploadSuccess\">\n                    <el-button type=\"primary\">点击上传</el-button>\n                </el-upload>\n            </el-form-item>\n            <el-form-item label=\"姓名:\" prop=\"name\">\n                <el-input v-model=\"form.name\" style=\"width: 20%\"></el-input>\n            </el-form-item>\n            <el-form-item label=\"性别\" prop=\"sex\">\n                <el-select v-model=\"form.sex\" style=\"width: 15%\" placeholder=\"请选择性别\">\n                    <el-option label=\"男\" value=\"男\"></el-option>\n                    <el-option label=\"女\" value=\"女\"></el-option>\n                </el-select>\n            </el-form-item>\n            <el-form-item label=\"身份证号:\" prop=\"personNumber\">\n                <el-input v-model=\"form.personNumber\" style=\"width: 35%\"></el-input>\n            </el-form-item>\n            <el-form-item label=\"电话:\" prop=\"phone\">\n                <el-input v-model=\"form.phone\" style=\"width: 25%\"></el-input>\n            </el-form-item>\n            <el-form-item label=\"邮箱:\" prop=\"email\">\n                <el-input v-model=\"form.email\" style=\"width: 40%\"></el-input>\n            </el-form-item>\n            <el-form-item>\n                <el-button style=\"margin-top: 10px; margin-left: 5px\" type=\"primary\" @click=\"save\"> 更新 </el-button>\n            </el-form-item>\n        </el-form>\n    </div>\n</template>\n\n<script>\n    import request from \"../../utils/request\";\n    import Cookies from \"js-cookie\";\n\n    export default {\n        name: \"info\",\n\n        data() {\n\n            //自定义表单校验\n            const checkPhone = (rule, value, callback) => {\n                if (!/^[1][3,4,5,6,7,8,9][0-9]{9}$/.test(value)) {\n                    callback(new Error('请输入合法的手机号'));\n                }\n                callback();\n            };\n\n            const checkEmail = (rule, value, callback) => {\n                const reg = /^([a-zA-Z0-9]+[-_\\.]?)+@[a-zA-Z0-9]+\\.[a-z]+$/;\n                if (value === '' || value === undefined || value == null) {\n                    callback(new Error('请输入邮箱'));\n                } else {\n                    if (!reg.test(value)) {\n                        callback(new Error('请输入正确的邮箱地址'));\n                    } else {\n                        callback();\n                    }\n                }\n            };\n\n            const checkID = (rule, value, callback) => {\n                if (!value) {\n                    callback(new Error('身份证不能为空'))\n                }\n                if (! /(^\\d{15}$)|(^\\d{18}$)|(^\\d{17}(\\d|X|x)$)/.test(value)) {\n                    callback(new Error('请输入正确的二代身份证号码'))\n                } else {\n                    callback()\n                }\n            };\n\n            return {\n                form: {},\n                user: Cookies.get('user') ? JSON.parse(Cookies.get('user')) : {},\n                rules: {\n                    name: [\n                        { required: true, message: '请输入姓名', trigger: 'blur'}\n                    ],\n                    personNumber: [\n                        { validator: checkID, trigger: 'blur' }\n                    ],\n                    phone: [\n                        { validator: checkPhone, trigger: 'blur' }\n                    ],\n                    email: [\n                        { validator: checkEmail, trigger: 'blur' }\n                    ],\n                    sex: [\n                        { required: true, message: '请选择性别', trigger: 'blur'}\n                    ],\n                }\n            }\n        },\n\n        created() {\n            const id = this.$route.query.id;\n            this.load(id);\n        },\n\n        methods: {\n\n            load(id){\n                request.get(\"/user/\" + id).then(res => {\n                    this.form = res.data;\n                });\n            },\n\n            save(){\n                this.$refs['ruleForm'].validate((valid) => {\n                    if (valid) {\n                        request.post(\"/user/updateUser\",this.form).then(res => {\n                            if (res.code === '200'){\n                                this.$notify.success(\"更新成功\");\n                                this.load(this.form.id);\n                                Cookies.set('user', JSON.stringify(this.form));\n                            } else {\n                                this.$notify.error(res.msg);\n                            }\n                        })\n                    }\n                });\n            },\n\n            filesUploadSuccess(res){\n                this.$nextTick(() => {\n                    if (this.$refs['upload']){\n                        this.$refs['upload'].clearFiles();  //清除历史文件列表\n                    }\n                });\n                this.form.cover = res.data;\n            },\n        }\n    }\n</script>\n\n<style scoped>\n\n</style>"],"mappings":"AA0CA,OAAAA,OAAA;AACA,OAAAC,OAAA;AAEA;EACAC,IAAA;EAEAC,KAAA;IAEA;IACA,MAAAC,UAAA,GAAAA,CAAAC,IAAA,EAAAC,KAAA,EAAAC,QAAA;MACA,oCAAAC,IAAA,CAAAF,KAAA;QACAC,QAAA,KAAAE,KAAA;MACA;MACAF,QAAA;IACA;IAEA,MAAAG,UAAA,GAAAA,CAAAL,IAAA,EAAAC,KAAA,EAAAC,QAAA;MACA,MAAAI,GAAA;MACA,IAAAL,KAAA,WAAAA,KAAA,KAAAM,SAAA,IAAAN,KAAA;QACAC,QAAA,KAAAE,KAAA;MACA;QACA,KAAAE,GAAA,CAAAH,IAAA,CAAAF,KAAA;UACAC,QAAA,KAAAE,KAAA;QACA;UACAF,QAAA;QACA;MACA;IACA;IAEA,MAAAM,OAAA,GAAAA,CAAAR,IAAA,EAAAC,KAAA,EAAAC,QAAA;MACA,KAAAD,KAAA;QACAC,QAAA,KAAAE,KAAA;MACA;MACA,gDAAAD,IAAA,CAAAF,KAAA;QACAC,QAAA,KAAAE,KAAA;MACA;QACAF,QAAA;MACA;IACA;IAEA;MACAO,IAAA;MACAC,IAAA,EAAAd,OAAA,CAAAe,GAAA,WAAAC,IAAA,CAAAC,KAAA,CAAAjB,OAAA,CAAAe,GAAA;MACAG,KAAA;QACAjB,IAAA,GACA;UAAAkB,QAAA;UAAAC,OAAA;UAAAC,OAAA;QAAA,EACA;QACAC,YAAA,GACA;UAAAC,SAAA,EAAAX,OAAA;UAAAS,OAAA;QAAA,EACA;QACAG,KAAA,GACA;UAAAD,SAAA,EAAApB,UAAA;UAAAkB,OAAA;QAAA,EACA;QACAI,KAAA,GACA;UAAAF,SAAA,EAAAd,UAAA;UAAAY,OAAA;QAAA,EACA;QACAK,GAAA,GACA;UAAAP,QAAA;UAAAC,OAAA;UAAAC,OAAA;QAAA;MAEA;IACA;EACA;EAEAM,QAAA;IACA,MAAAC,EAAA,QAAAC,MAAA,CAAAC,KAAA,CAAAF,EAAA;IACA,KAAAG,IAAA,CAAAH,EAAA;EACA;EAEAI,OAAA;IAEAD,KAAAH,EAAA;MACA7B,OAAA,CAAAgB,GAAA,YAAAa,EAAA,EAAAK,IAAA,CAAAC,GAAA;QACA,KAAArB,IAAA,GAAAqB,GAAA,CAAAhC,IAAA;MACA;IACA;IAEAiC,KAAA;MACA,KAAAC,KAAA,aAAAC,QAAA,CAAAC,KAAA;QACA,IAAAA,KAAA;UACAvC,OAAA,CAAAwC,IAAA,0BAAA1B,IAAA,EAAAoB,IAAA,CAAAC,GAAA;YACA,IAAAA,GAAA,CAAAM,IAAA;cACA,KAAAC,OAAA,CAAAC,OAAA;cACA,KAAAX,IAAA,MAAAlB,IAAA,CAAAe,EAAA;cACA5B,OAAA,CAAA2C,GAAA,SAAA3B,IAAA,CAAA4B,SAAA,MAAA/B,IAAA;YACA;cACA,KAAA4B,OAAA,CAAAI,KAAA,CAAAX,GAAA,CAAAY,GAAA;YACA;UACA;QACA;MACA;IACA;IAEAC,mBAAAb,GAAA;MACA,KAAAc,SAAA;QACA,SAAAZ,KAAA;UACA,KAAAA,KAAA,WAAAa,UAAA;QACA;MACA;;MACA,KAAApC,IAAA,CAAAqC,KAAA,GAAAhB,GAAA,CAAAhC,IAAA;IACA;EACA;AACA"},"metadata":{},"sourceType":"module","externalDependencies":[]}